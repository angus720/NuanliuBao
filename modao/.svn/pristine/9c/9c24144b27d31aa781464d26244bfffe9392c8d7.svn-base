package nuanliu.com.modao.ui.adapter;

import android.content.Context;
import android.support.v4.content.ContextCompat;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.zhy.autolayout.utils.AutoUtils;

import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;
import butterknife.ButterKnife;
import nuanliu.com.modao.R;
import nuanliu.com.modao.bean.RepairScheduleBean;

public class RepairScheduleAdapter<T> extends RecyclerView.Adapter {

    private LayoutInflater mInflater;
    private Context mContext;
    private List<T> mDatas = new ArrayList<>();

    public RepairScheduleAdapter(Context context) {
        mContext = context;
        mInflater = LayoutInflater.from(context);
    }

    public void addData(List<T> list) {

        if (list != null && list.size() != 0) {
            int startposition = mDatas.size();
            mDatas.addAll(list);
            notifyItemRangeInserted(startposition, mDatas.size());
        }
    }

    public void clear() {

        int size = mDatas.size();
        if (size != 0) {
            mDatas.clear();
            notifyItemRangeRemoved(0, size);
        }
    }

    private void delete(int position) {
        mDatas.remove(position);
        notifyItemRemoved(position);
        if (position < mDatas.size() - 1) {
            notifyItemChanged(position);
        }
    }

    public void refreshData(List list) {
        if (list != null && list.size() != 0) {
            clear();
            addData(list);
        }
    }

    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View inflate = mInflater.inflate(R.layout.item_repair_schedule, parent, false);
        return new ViewHolderSchedule(inflate);
    }

    @Override
    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
        if (holder instanceof RepairScheduleAdapter.ViewHolderSchedule) {
            ViewHolderSchedule holderSchedule = (ViewHolderSchedule) holder;
            List<RepairScheduleBean> mdata = (List<RepairScheduleBean>) mDatas;
            RepairScheduleBean bean = mdata.get(position);

            holderSchedule.mViewLineTop.setBackgroundColor(ContextCompat.getColor(mContext, position == 0 ? R.color.white : R.color.tint_gray_line));
            holderSchedule.mIvSheduleIndex.setBackground(ContextCompat.getDrawable(mContext, position == 0 ? R.drawable.orange_circle : R.drawable.gray_circle));
            holderSchedule.mViewLineBottom.setBackgroundColor(ContextCompat.getColor(mContext, R.color.tint_gray_line));
            holderSchedule.mViewLineBottom.setVisibility(position == getItemCount() - 1 ? View.GONE : View.VISIBLE);
            holderSchedule.mTvSheduleHead.setTextColor(ContextCompat.getColor(mContext, position == 0 ? R.color.orange : R.color.charactertintgray));
            holderSchedule.mTvSheduleContent.setTextColor(ContextCompat.getColor(mContext, position == 0 ? R.color.black : R.color.charactertintgray));

            holderSchedule.mTvSheduleHead.setText(bean.getMhead());
            holderSchedule.mTvScheduleDate.setText(bean.getMdate());
            holderSchedule.mTvSheduleContent.setText(bean.getMcontent());
        }
    }

    @Override
    public int getItemCount() {
        return mDatas.size();
    }

    class ViewHolderSchedule extends RecyclerView.ViewHolder {

        @BindView(R.id.view_line_top)
        View mViewLineTop;
        @BindView(R.id.iv_shedule_index)
        ImageView mIvSheduleIndex;
        @BindView(R.id.tv_shedule_head)
        TextView mTvSheduleHead;
        @BindView(R.id.tv_schedule_date)
        TextView mTvScheduleDate;
        @BindView(R.id.tv_shedule_content)
        TextView mTvSheduleContent;
        @BindView(R.id.view_line_bottom)
        View mViewLineBottom;

        public ViewHolderSchedule(View itemView) {
            super(itemView);
            ButterKnife.bind(this, itemView);
            AutoUtils.autoSize(itemView);
//            R.layout.item_repair_schedule
        }
    }
}
