package nuanliu.com.modao.network;

import java.io.File;
import java.util.List;
import java.util.Map;

import nuanliu.com.modao.base.BaseResponse;
import nuanliu.com.modao.bean.AddressListBean;
import nuanliu.com.modao.bean.AppUpdate;
import nuanliu.com.modao.bean.CodeBean;
import nuanliu.com.modao.bean.CommonResponse;
import nuanliu.com.modao.bean.CompanyListBean;
import nuanliu.com.modao.bean.DeviceItemBean;
import nuanliu.com.modao.bean.DeviceListBean;
import nuanliu.com.modao.bean.LatAndLonBean;
import nuanliu.com.modao.bean.NoticeListBean;
import nuanliu.com.modao.bean.OrderDetailBean;
import nuanliu.com.modao.bean.OrderListBean;
import nuanliu.com.modao.bean.OweListBean;
import nuanliu.com.modao.bean.PayBean;
import nuanliu.com.modao.bean.PayRecordListBean;
import nuanliu.com.modao.bean.RegionBean;
import nuanliu.com.modao.bean.RepairAddrListBean;
import nuanliu.com.modao.bean.RepairOrderDetailBean;
import nuanliu.com.modao.bean.RepairOrderProgressBean;
import nuanliu.com.modao.bean.ResidentInfoBean;
import nuanliu.com.modao.bean.ResidentListBean;
import nuanliu.com.modao.bean.ShouldPayBean;
import nuanliu.com.modao.bean.UploadImgRes;
import nuanliu.com.modao.bean.User;
import okhttp3.MultipartBody;
import okhttp3.RequestBody;
import okhttp3.ResponseBody;
import retrofit2.http.Field;
import retrofit2.http.FieldMap;
import retrofit2.http.FormUrlEncoded;
import retrofit2.http.GET;
import retrofit2.http.Header;
import retrofit2.http.Multipart;
import retrofit2.http.POST;
import retrofit2.http.Part;
import retrofit2.http.Path;
import retrofit2.http.Streaming;
import rx.Observable;

public interface Apis {

    /**
     * 图片上传接口
     */
    @Multipart
    @POST("file/appUploadTest/image/false")
    Observable<UploadImgRes> upLoadFile(
            @Part("description") RequestBody description,
            @Part List<MultipartBody.Part> parts
    );

    /**
     * 登录系统
     */
    @FormUrlEncoded
    @POST("user/login.do")
    Observable<BaseResponse<User>> loginSystem(
            @Field("username") String username,
            @Field("passwd") String passwd
    );

    /**
     * 注册
     */
    @FormUrlEncoded
    @POST("user/registerUser.do")
    Observable<BaseResponse> registerUser(
            @Field("username") String username,
            @Field("passwd") String passwd,
            @Field("telphone") String telphone,
            @Field("veriCode") String veriCode
    );

    /**
     * 注册验证
     */
    @FormUrlEncoded
    @POST("user/finduser.do")
    Observable<BaseResponse> finduser(
            @Field("username") String username,
            @Field("telphone") String telphone
    );

    /**
     * 根据用户名密码、验证码修改密码
     */
    @FormUrlEncoded
    @POST("user/uppwdbyusername.do")
    Observable<BaseResponse> uppwdbyUsername(
            @Field("username") String username,
            @Field("password") String password,
            @Field("newpwd") String newpwd
    );

    /**
     * 根据手机号、验证码修改密码
     */
    @FormUrlEncoded
    @POST("user/uppwdbytelphone.do")
    Observable<BaseResponse> uppwdbyTelphone(
            @Field("telphone") String telphone,
            @Field("newpwd") String newpwd,
            @Field("veriCode") String veriCode
    );

    /**
     * 保存更新APP用户
     */
    @FormUrlEncoded
    @POST("user/saveorupdateuser.do")
    Observable<BaseResponse> saveorupdateuser(
            @Field("username") String username,
            @Field("passwd") String passwd,
            @Field("name") String name,
            @Field("telphone") String telphone,
            @Field("IDcardNo") String IDcardNo,
            @Field("age") int age,
            @Field("gender") String gender
    );

    /**
     * 绑定房屋
     * username,用户名
     * telphone,手机号
     * companyid,公司ID
     * householder,户主姓名
     * account_h  用户账号
     */
    @FormUrlEncoded
    @POST("user/bdHouse.do")
    Observable<BaseResponse> bdHouse(
            @Field("username") String username,
            @Field("telphone") String telphone,
            @Field("companyid") String companyid,
            @Field("householder") String householder,
            @Field("account_h") String account_h
    );

    /**
     * 获取所有公司
     */
    @FormUrlEncoded
    @POST("user/getCompanys.do")
    Observable<CompanyListBean> getCompanys(
            @Field("name") String name,
            @Field("city") String city
    );

    /**
     * 获取支付信息
     * residentid  住户id
     * payMethod 支付方式(wx,zfb,ysf)<微信，支付宝，云闪付>
     */
    @FormUrlEncoded
    @POST("user/getPayInfo.do")
    Observable<BaseResponse<PayBean>> getPayInfo(
            @Field("residentid") String residentid,
            @Field("payMethod") String payMethod
    );

    /**
     * 支付
     * String flag
     * flag:wx,zfb,ysf
     * String residentid
     * String year(非必填)
     * String entrance  *缴费入口  1APP，2微信小程序，3微信公众号
     * String invoiceType  *发票类型  1：不开发票，2：纸质发票，3：电子发票
     */
    @FormUrlEncoded
    @POST("pay/alipay/toPay.do")
    Observable<BaseResponse<PayBean>> getPay(
            @Field("residentid") String residentid,
            @Field("year") String year,
            @Field("flag") String flag,
            @Field("entrance") String entrance,
            @Field("invoiceType") String invoiceType
    );

    /**
     * 用户地址列表
     * String username  *
     * int startPage(可选，默认1)
     * int pageSize(可选，默认10)
     */
    @FormUrlEncoded
    @POST("userAdress/userAdressList.do")
    Observable<AddressListBean> getAddressList(
            @Field("username") String username,
            @Field("startPage") int startPage,
            @Field("pageSize") int pageSize
    );

    /**
     * 保存更新用户收件地址
     * String id
     * String username  *
     * String provice(省)
     * String city(市)
     * String district(区县)
     * String detailed(详细地址)
     * String contacts(收件人姓名)
     * String telphone(收件人电话)
     * int isDefault(是否默认地址)
     */
    @FormUrlEncoded
    @POST("userAdress/saveorupdateUserAdress.do")
    Observable<BaseResponse> editAddress(
            @Field("id") String id,
            @Field("username") String username,
            @Field("provice") String provice,
            @Field("city") String city,
            @Field("district") String district,
            @Field("detailed") String detailed,
            @Field("contacts") String contacts,
            @Field("telphone") String telphone,
            @Field("isDefault") int isDefault
    );

    /**
     * 删除用户收件地址
     * String id(收件地址id)
     */
    @FormUrlEncoded
    @POST("userAdress/delUserAdress.do")
    Observable<BaseResponse> delAddress(
            @Field("id") String id
    );

    /**
     * 已绑定房屋列表
     * String username *
     * int startPage(可选，默认1)
     * int pageSize(可选，默认10)
     */
    @FormUrlEncoded
    @POST("user/bdList.do")
    Observable<ResidentListBean> bdResidentList(
            @Field("username") String username,
            @Field("startPage") int startPage,
            @Field("pageSize") int pageSize
    );

    /**
     * 修改绑定房屋
     * String username  *
     * String resident_o(原住户ID)  *
     * String companyid(公司id)  *
     * String householder(户主姓名)  *
     * String account_h(用户卡号)  *
     */
    @FormUrlEncoded
    @POST("user/upbdResident.do")
    Observable<BaseResponse> upbdResident(
            @Field("username") String username,
            @Field("resident_o") String resident_o,
            @Field("companyid") String companyid,
            @Field("householder") String householder,
            @Field("account_h") String account_h
    );

    /**
     * 删除绑定房屋
     * String username  *
     * String resident(要删除的住户id)  *
     */
    @FormUrlEncoded
    @POST("user/delbdResindet.do")
    Observable<BaseResponse> delbdResident(
            @Field("username") String username,
            @Field("resident") String resident
    );

    /**
     * 查找房屋
     * String username  *  用户名
     * String telphone   电话
     * String companyid  公司id
     * String householder  户主姓名
     * String account_h  *用户新卡号
     */
    @FormUrlEncoded
    @POST("user/findHouse.do")
    Observable<BaseResponse<ResidentInfoBean>> findHouse(
            @Field("username") String username,
            @Field("telphone") String telphone,
            @Field("companyid") String companyid,
            @Field("householder") String householder,
            @Field("account_h") String account_h
    );

    /**
     * 查找用户新卡号
     * String username  *  用户名
     * String telphone   电话
     * String companyid  公司id
     * String householder  户主姓名
     * String account_h_old  *用户旧卡号
     */
    @FormUrlEncoded
    @POST("user/findNewNumber.do")
    Observable<ResidentListBean> findNewNumber(
            @Field("username") String username,
            @Field("telphone") String telphone,
            @Field("companyid") String companyid,
            @Field("householder") String householder,
            @Field("account_h_old") String account_h_old
    );

    /**
     * 根据房屋ID绑定房屋
     * String account  *用户账号
     * String residentid_old  房屋id(修改时必填，新增时不填)
     * String residentid  *房屋id
     */
    @FormUrlEncoded
    @POST("user/bdHousebyResidentid.do")
    Observable<BaseResponse> bdHousebyResidentid(
            @Field("username") String username,
            @Field("residentid_old") String residentid_old,
            @Field("residentid") String residentid
    );

    /**
     * 获取验证码
     * String telphone *
     */
    @FormUrlEncoded
    @POST("user/getVerificationCode.do")
    Observable<BaseResponse<CodeBean>> getVeriCode(
            @Field("telphone") String telphone
    );

    /**
     * 用户缴费记录
     * String account  *
     * String residents  *
     * int startPage(可选，默认1)
     * int pageSize(可选，默认10)
     */
    @FormUrlEncoded
    @POST("paymentOrder/userPaymentRecorde.do")
    Observable<PayRecordListBean> paymentList(
            @Field("username") String username,
            @Field("residents") String residents,
            @Field("startPage") int startPage,
            @Field("pageSize") int pageSize
    );

    /**
     * 账单详情
     * String id
     */
    @FormUrlEncoded
    @POST("paymentOrder/userPaymentOrder.do")
    Observable<BaseResponse<OrderDetailBean>> orderDetail(
            @Field("id") String id
    );

    /**
     * 通知公告
     */
    @FormUrlEncoded
    @POST("user/getAnnouncement.do")
    Observable<NoticeListBean> getAnnouncement(
            @Field("id") String id
    );

    /**
     * 缴费详情
     * String usename
     * String residentid
     */
    @FormUrlEncoded
    @POST("paymentOrder/shouldPayInfo.do")
    Observable<BaseResponse<ShouldPayBean>> shouldPayInfo(
            @Field("usename") String usename,
            @Field("residentid") String residentid
    );

    /**
     * 根据年度查询缴费详情
     * String usename
     * String residentid
     * String year
     */
    @FormUrlEncoded
    @POST("paymentOrder/shouldPayInfoByYear.do")
    Observable<BaseResponse<ShouldPayBean>> payInfoByYear(
            @Field("usename") String usename,
            @Field("residentid") String residentid,
            @Field("year") String year
    );

    /**
     * @param version
     * @return
     * @下载apk
     */
    @Streaming
    @GET("app-release." + "{version}" + ".apk")
    Observable<ResponseBody> download(@Path("version") String version,
                                      @Header("range") String rang);

    /**
     * @apk更新接口 请求地址:${WEB_ROOT}/app_update.do
     * 传入参数:{app_key  cur_version}
     */
    @FormUrlEncoded
    @POST("user/app_update.do")
    Observable<BaseResponse<AppUpdate>> getAppUpdate(
            @Field("app_key") String app_key,
            @Field("cur_version") String cur_version
    );

    /**
     * 获取设备数据
     *
     * @param eui64
     * @param deviceType
     * @return
     */
    @FormUrlEncoded
    @POST("user/devicedata.do")
    Observable<BaseResponse<DeviceItemBean>> getUserDeviceData(
            @Field("eui64") String eui64,
            @Field("deviceType") String deviceType
    );

    /**
     * 获取用户末端设备列表
     *
     * @param residentid
     * @return
     */
    @FormUrlEncoded
    @POST("user/devicelist.do")
    Observable<DeviceListBean> getUserDeviceList(
            @Field("residentid") String residentid
    );

    /**
     * 修改昵称
     * String telephone  *手机号
     * String nickName  *昵称
     */
    @FormUrlEncoded
    @POST("user/updateCUNikeName.do")
    Observable<BaseResponse<User>> updateNickName(
            @Field("telephone") String telephone,
            @Field("nickName") String nickName
    );

    /**
     * 修改头像
     * String telephone  *手机号
     * File headPortrait  *头像图片
     */
    @FormUrlEncoded
    @POST("user/updateCUHeadProtrait.do")
    Observable<BaseResponse<User>> updateProtrait(
            @Field("telephone") String telephone,
            @Field("headPortrait") File headPortrait
    );

    /**
     * 往年欠费
     * String telephone  *手机号
     * String residentid *房屋ID
     */
    @FormUrlEncoded
    @POST("paymentOrder/getQFList.do")
    Observable<OweListBean> getOweList(
            @Field("telephone") String telephone,
            @Field("residentid") String residentid
    );

    /**
     * 保存C端用户提交的意见
     * String telephone  *手机号
     * String content  *内容
     */
    @FormUrlEncoded
    @POST("opinionsfeedback/saveofb.do")
    Observable<BaseResponse> feedback(
            @Field("telephone") String telephone,
            @Field("content") String content
    );

    /**
     * 维修地址列表
     * String account   *账号/手机号
     * int startPage  起始页
     * int pageSize   每页条数
     */
    @FormUrlEncoded
    @POST("user/repairList.do")
    Observable<RepairAddrListBean> getRepairList(
            @Field("username") String username,
            @Field("startPage") int startPage,
            @Field("pageSize") int pageSize
    );

    /**
     * 根据地址查找房屋
     * String areaCode  行政区划代码
     * String account   *账号/手机号
     * String communityName   *小区名称
     * String buildingNumber  *楼栋号
     * String unitNumber   *单元号
     * String houseNumber  *门牌号
     */
    @FormUrlEncoded
    @POST("user/findHouseByAddr.do")
    Observable<BaseResponse> findHouseByAddr(
            @Field("areaCode") String areaCode,
            @Field("username") String username,
            @Field("communityName") String communityName,
            @Field("buildingNumber") String buildingNumber,
            @Field("unitNumber") String unitNumber,
            @Field("houseNumber") String houseNumber
    );

    /**
     * 根据省份名称、城市名称获取城市下的行政区
     * String proviceName  *省份名称(例：安徽省)
     * String cityName  *城市名称(例：合肥市)
     */
    @FormUrlEncoded
    @POST("user/getAreaByCity.do")
    Observable<RegionBean> getAreaByCity(
            @Field("cityName") String cityName
    );

    /**
     * 绑定维修地址
     * String account   *账号/手机号
     * String residentid   *房屋id
     */
    @FormUrlEncoded
    @POST("user/bdRepairAddr.do")
    Observable<RepairAddrListBean> bdRepairAddr(
            @Field("username") String username,
            @Field("residentid") String residentid
    );

    /**
     * 获得项目的经纬度
     */
    @GET("apk/gps.json")
    Observable<LatAndLonBean> getLatAndLon();

    /**
     * @工单查询 （总览）
     * 请求地址:${WEB_ROOT}/maintain/app/query_workorder_for_administrator.do
     * 传入参数:{
     * "sheet":0[全部] | 1[待处理] | 2[处理中] | 3[待评价]
     * 比如列表中无数据,则cursor=0;
     * 如果已经加载了10条数据,那么手指向上划动加载更多的先前的数据,则cursor=10;
     * 如手已经加载过12条数据，那么手指向下划动加载更多新的数据,则cursor=0,然后返回的数据插入到先前的12条数据之前,可能有重复，根据id来判断重复
     * "cursor":游标(int),
     * "pageSize":取的条数(int)
     * }
     */
    @FormUrlEncoded
    @POST("query_workorder_for_customer.do")
    Observable<OrderListBean> getOrderList(
            @Field("sheet") int sheet,
            @Field("cursor") int cursor,
            @Field("pageSize") int pageSize
    );

    /**
     * @return
     * @创建工单 请求地址:${WEB_ROOT}/maintain/app/create_workorder.do
     * 传入参数:{
     * "source": 1[系统警报] | 2[用户报修],
     * "kind": 1[维修] | 2[检修] | 3[报修],
     * "type": 1[锅炉房] | 2[管井] | 3[住户],
     * "projectid":项目编号,
     * "address":"地址",
     * "telephone":"联系电话",
     * "content":"维修内容",
     * "description":"故障描述",
     * "comment":"备注"
     * }
     */
    @FormUrlEncoded
    @POST("create_workorder.do")
    Observable<CommonResponse> createWorkOrder(
            @FieldMap Map<String, String> params
    );


    /**
     * @评价工单
     * 请求地址:${WEB_ROOT}/maintain/app/survey_workorder.do
     * 传入参数:{
     * "orderid": 工单id;
     * "act": 0 完成 1未完成重新派单
     * "maintainerEvaluate": 维修师傅评价 1-5
     * "serviceEvaluate" : 服务评价 1-5
     * "consequence":" 已解决(1), 未解决(2)
     * "evaluate" : 评价短语
     * "remark":" 备注信息 ,
     */
    @FormUrlEncoded
    @POST("survey_workorder.do")
    Observable<CommonResponse> evaluationOrder(
            @FieldMap Map<String, String> params);

    /**
     * @上传图片
     * 请求地址:${WEB_ROOT}/maintain/app/image/upload_img.do
     * 传入参数:{
     * "img_base64": "图片转化为的字符串"
     */
    @FormUrlEncoded
    @POST("image/upload_img.do")
    Observable<UploadImgRes> upLoadImg(
            @Field("img_base64") List<String> img_base64);

    /**
     * @工单详情
     *请求地址:${WEB_ROOT}/maintain/app/workorder_detail.do
     *传入参数:{
     *"orderid":"工单编号(string)"
     *}
     * @param orderid
     * @return
     */
    @FormUrlEncoded
    @POST("workorder_detail.do")
    Observable<RepairOrderDetailBean> getOrderDetail(
            @Field("orderid") String orderid
    );

    /**
     * @撤销报修
     *请求地址:${WEB_ROOT}/maintain/app/cancel_workorder.do
     *传入参数:
     *"orderid":"工单编号(string)"
     * String description, // 备注说明
     * String cancelType // 取消类型（用户取消）
     * @return
     */
    @FormUrlEncoded
    @POST("cancel_workorder.do")
    Observable<BaseResponse> cancelOrder(
            @Field("orderid") String orderId,
            @Field("description") String description,
            @Field("cancelType") String cancelType
    );

    /**
     * @删除工单
     *请求地址:${WEB_ROOT}/maintain/app/delete_workorder.do
     *传入参数:
     *"orderid":"工单编号(string)"
     * @return
     */
    @FormUrlEncoded
    @POST("delete_workorder.do")
    Observable<BaseResponse> deleteOrder(
            @Field("orderid") String orderId
    );

    /**
     *@维修进度
     *请求地址:${WEB_ROOT}/maintain/app/workorder_progress.do
     *传入参数:{
     *"orderid":"工单编号(string)"
     *}
     *
     */
    @FormUrlEncoded
    @POST("workorder_progress.do")
    Observable<RepairOrderProgressBean> getOrderProgress(
            @Field("orderid") String orderid
    );
}
